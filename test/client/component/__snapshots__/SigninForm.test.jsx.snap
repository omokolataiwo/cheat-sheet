// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Signin Form Component should render component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SigninForm
    errors={Object {}}
    signInError={
      Array [
        "Invalid username/password",
      ]
    }
    user={
      Object {
        "password": "",
        "username": "",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <h3>
          Sign in
        </h3>,
        Array [
          <span
            className="error"
          >
            Invalid username/password
          </span>,
        ],
        <form>
          <TextInputField
            errors={Array []}
            label="Email Address"
            name="username"
            size="3"
            type="text"
            value=""
          />
          <TextInputField
            errors={Array []}
            label="Password"
            name="password"
            placeholder="password"
            size="3"
            type="password"
            value=""
          />
          <button
            className="btn"
            type="submit"
          >
            Sign in
          </button>
        </form>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Sign in",
        },
        "ref": null,
        "rendered": "Sign in",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": "Mon Jan 21 2019 13:38:26 GMT+0100 (West Africa Standard Time)",
        "nodeType": "host",
        "props": Object {
          "children": "Invalid username/password",
          "className": "error",
        },
        "ref": null,
        "rendered": "Invalid username/password",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <TextInputField
              errors={Array []}
              label="Email Address"
              name="username"
              size="3"
              type="text"
              value=""
            />,
            <TextInputField
              errors={Array []}
              label="Password"
              name="password"
              placeholder="password"
              size="3"
              type="password"
              value=""
            />,
            <button
              className="btn"
              type="submit"
            >
              Sign in
            </button>,
          ],
          "onSubmit": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "errors": Array [],
              "label": "Email Address",
              "name": "username",
              "onChange": undefined,
              "size": "3",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "errors": Array [],
              "label": "Password",
              "name": "password",
              "onChange": undefined,
              "placeholder": "password",
              "size": "3",
              "type": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign in",
              "className": "btn",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Sign in",
            "type": "button",
          },
        ],
        "type": "form",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <h3>
            Sign in
          </h3>,
          Array [
            <span
              className="error"
            >
              Invalid username/password
            </span>,
          ],
          <form>
            <TextInputField
              errors={Array []}
              label="Email Address"
              name="username"
              size="3"
              type="text"
              value=""
            />
            <TextInputField
              errors={Array []}
              label="Password"
              name="password"
              placeholder="password"
              size="3"
              type="password"
              value=""
            />
            <button
              className="btn"
              type="submit"
            >
              Sign in
            </button>
          </form>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign in",
          },
          "ref": null,
          "rendered": "Sign in",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": "Mon Jan 21 2019 13:38:26 GMT+0100 (West Africa Standard Time)",
          "nodeType": "host",
          "props": Object {
            "children": "Invalid username/password",
            "className": "error",
          },
          "ref": null,
          "rendered": "Invalid username/password",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <TextInputField
                errors={Array []}
                label="Email Address"
                name="username"
                size="3"
                type="text"
                value=""
              />,
              <TextInputField
                errors={Array []}
                label="Password"
                name="password"
                placeholder="password"
                size="3"
                type="password"
                value=""
              />,
              <button
                className="btn"
                type="submit"
              >
                Sign in
              </button>,
            ],
            "onSubmit": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "errors": Array [],
                "label": "Email Address",
                "name": "username",
                "onChange": undefined,
                "size": "3",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "errors": Array [],
                "label": "Password",
                "name": "password",
                "onChange": undefined,
                "placeholder": "password",
                "size": "3",
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Sign in",
                "className": "btn",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Sign in",
              "type": "button",
            },
          ],
          "type": "form",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
